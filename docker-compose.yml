version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: checkin
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d checkin"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  api:
    build: ./checklist_project_backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./checklist_project_backend/.env
    expose:
      - "8000"
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/health', timeout=2).status==200 else sys.exit(1)\""]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  frontend:
    build: ./checklist_project_frontend
    ports:
      - "80:80"          # ← EC2에서 바로 접속하려면 80으로 노출 권장
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
